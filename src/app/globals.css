:root {
  --max-width: 1400px;
  --nav-bg: #a3a59e;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
html {
  scroll-behavior: smooth;
}

html,
body {
  min-width: 100vw;
  overflow-x: hidden;
}

body {
  background-color: #000;
}

a {
  color: inherit;
  text-decoration: none;
}

.center-container {
  max-width: var(--max-width);
  margin: 0 auto;
  padding: 0.5rem;
}

header {
}

#smooth-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  min-height: 100vh;
  /* -webkit-transform-origin: top left;
    transform-origin: top left;
     -webkit-transform: translate3D(-159vw,-200vh,0) scale(36);
    transform: translate3D(-159vw,-200vh,0) scale(36);  */
}

.cursor-element {
  background: #fff;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  transform: translate3d(0, 0, 0);
  transition: transform 300ms cubic-bezier(0.02, 1.23, 0.79, 1.08);

  /* TODO */
  display: none;
}

button {
  background-color: transparent;
  border: none;
  font: inherit;
  color: #fff;
}

.loader {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1000;
  width: 100vw;
  height: 100vh;

  display: grid;
  place-items: center;
  background-color: #131313;
  transform: translateY(-100%);
  transition: transform 500ms cubic-bezier(0.7, 0, 0.2, 1);
}

.isLoaderShow {
  transform: translateY(0%);
}

.loader .text-wrap {
  position: relative;
}

.loader .text-wrap > h1 {
  font-size: 6rem;
  font-weight: 900;
  position: absolute;
  top: 0;
  left: 0;
  text-transform: uppercase;
  transform: translate(-50%, -50%);
}

.loader .text-wrap .first {
  color: #fff;
}
.loader .text-wrap .last {
  color: #777;
  transition: clip-path 2s linear, -webkit-clip-path 2s linear;
}

.loader .text-wrap .last.startCliping {
  animation: clipPath 2s linear 1 forwards;
}

@keyframes clipPath {
  from {
    clip-path: inset(0 0 0 0);
    -webkit-clip-path: inset(0 0 0 0);
  }
  to {
    clip-path: inset(100% 0 0 0);
    -webkit-clip-path: inset(100% 0 0 0);
  }
}
